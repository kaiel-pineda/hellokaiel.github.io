---
import { getCollection, type CollectionEntry } from "astro:content";
import DefaultLayout from "../../layouts/DefaultLayout.astro";
import SiteFooter from "../../components/masters/SiteFooter.astro";
import SiteNavigation from "../../components/masters/SiteNavigation.astro";

type Props = CollectionEntry<"portfolio">;

export async function getStaticPaths() {
	const entries = await getCollection("portfolio");
	return entries.map((entry: Props) => ({
		params: { slug: entry.slug },
		props: entry,
	}));
}

const entry = Astro.props;
const { Content } = await entry.render();
---

<DefaultLayout title={entry.data.title}>
	<SiteNavigation />

	<div class="my-24">
		<header class="mb-6">
			<div class="mx-auto max-w-7xl">
				<div class="grid grid-cols-1 gap-6 lg:grid-cols-[auto_auto]">
					<div class="row-span-1">
						<div class="mx-auto max-w-screen-md px-6">
							<div class="flex flex-col gap-y-3">
								<time class="font-sans text-base font-medium leading-normal text-dynamic-neutral-700" datetime={new Date(entry.data.date).toISOString()}>
									{
										new Date(entry.data.date).toLocaleDateString("en-us", {
											year: "numeric",
											month: "short",
											day: "numeric",
										})
									}
								</time>

								<h1 class="text-pretty font-display text-3xl font-semibold leading-normal text-dynamic-neutral-950">
									{entry.data.title}
								</h1>

								<div class="flex flex-wrap gap-x-6">
									{
										entry.data.categories.map((category) => (
											<div class="flex items-center gap-x-3">
												<div class="size-2 bg-dynamic-neutral-950" />
												<a class="font-sans text-base font-normal capitalize leading-normal text-dynamic-neutral-700" href={`/categories/${category}/`}>
													{category}
												</a>
											</div>
										))
									}
								</div>
							</div>
						</div>
					</div>

					<div class="row-start-2">
						<div class="mx-auto max-w-screen-md px-6">
							<div class="prose-xl prose-neutral font-sans text-dynamic-neutral-900">
								{entry.data.description}
							</div>
						</div>
					</div>

					<div class="row-start-3 lg:row-start-2">
						<div class="mx-auto max-w-screen-md px-6">
							{
								entry.data.metadata &&
									Object.entries(entry.data.metadata).map(([key, value]) => (
										<div class="border-x border-t border-dynamic-neutral-300 p-3 last-of-type:border-b">
											<div class="flex items-center gap-x-3">
												<span class="text-sm font-semibold capitalize leading-normal text-dynamic-neutral-950">{key}</span>
												<span class="text-base leading-normal text-dynamic-neutral-700">{value}</span>
											</div>
										</div>
									))
							}
						</div>
					</div>
				</div>
			</div>
		</header>
	</div>

	<section id="showcase" class="flex-1 bg-dynamic-neutral-0 py-24" data-theme="black">
		<Content />
	</section>

	<div data-theme="black">
		<SiteFooter class="border-dynamic-neutral-300 bg-dynamic-neutral-0 text-dynamic-neutral-600" />
	</div>
</DefaultLayout>
