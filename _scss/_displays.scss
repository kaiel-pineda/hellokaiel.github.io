$displays: ("block", "inline-block", "inline", "flex", "grid", "inline-flex", "inline-grid", "table", "inline-table", "list-item", "none", "contents");
@each $display in $displays {
  .d-#{$display} {
    display: #{$display};
  }
}

$flex-directions: (
  row: "row", 
  col: "column"
);
@each $flex, $direction in $flex-directions {
  .flex-#{$flex} {
    flex-direction: #{$direction};
  }
}

$flex-wrapping: ("wrap", "nowrap");
@each $wrapping in $flex-wrapping {
  .flex-#{$wrapping} {
    flex-wrap: #{$wrapping};
  }
}

@for $column from 1 to 13 {
  .grid-cols-#{$column} {
    grid-template-columns: repeat(#{$column}, minmax(0, 1fr));
  }

  @media (min-width: 768px) {
    .grid-md-cols-#{$column} {
      grid-template-columns: repeat(#{$column}, minmax(0, 1fr));
    }
  }

  @media (min-width: 992px) {
    .grid-lg-cols-#{$column} {
      grid-template-columns: repeat(#{$column}, minmax(0, 1fr));
    }
  }

  .col-span-#{$column} {
    grid-column: span #{$column} / span #{$column};
  }  
}

@for $row from 1 to 4 {
  .grid-rows-#{$row} {
    grid-template-rows: repeat(#{$row}, minmax(0, 1fr));
  }  
}

@for $column from 1 to 14 {
  .col-start-#{$column} {
    grid-column-start: #{$column};
  }

  .col-end-#{$column} {
    grid-column-end: #{$column};
  } 
}

.col-auto {
  grid-column: auto;
}

.col-span-fl {
  grid-column: 1 / -1;
}

.col-start-auto {
  grid-column-start: auto;
}

.col-end-auto {
  grid-column-end: auto;
}

$alignments: ("center", "space-between", "space-around", "space-evenly", "flex-start", "flex-end");
@each $align in $alignments {
  .justify-content-#{$align} {
    justify-content: #{$align};
  }

  .justify-items-#{$align} {
    justify-items: #{$align};
  }  

  .align-items-#{$align} {
    align-items: #{$align};
  }

  .align-content-#{$align} {
    align-content: #{$align};
  }
}

@each $gap in $spacing-gap-amounts {
  $gap-calculated: rem($gap * $spacing-lg);
  
  .gap-#{$gap} {
    gap: #{$gap-calculated};
  }

  .gap-y-#{$gap} {
    row-gap: #{$gap-calculated};
  }
  
  .gap-x-#{$gap} {
    column-gap: #{$gap-calculated};
  }
}